{"version":3,"sources":["types/types.js","context/chat/chatReducer.js","context/chat/ChatContext.js","helpers/fetch.js","auth/AuthContext.js","context/SocketContext.js","hooks/useSocket.js","helpers/scrollToBottom.js","components/ChatSelect.js","components/Searchbox.js","components/SidebarChatItem.js","components/Sidebar.js","components/InboxPeople.js","helpers/horaMes.js","components/IncomingMessage.js","components/OutgoingMessage.js","components/SendMessage.js","components/Messages.js","pages/ChatPage.js","pages/LoginPage.js","pages/RegisterPage.js","router/AuthRouter.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","ChatApp.js","index.js"],"names":["types","initialState","uid","chatActivo","usuarios","mensajes","chatReducer","state","action","type","payload","de","para","reverse","ChatContext","createContext","ChatProvider","children","useReducer","chatState","dispatch","console","log","Provider","value","baseUrl","process","fetchSinToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","err","name","message","fetchConToken","token","localStorage","getItem","AuthContext","checking","logged","email","AuthProvider","useState","auth","setAuth","useContext","login","password","ok","setItem","usuario","nombre","register","msg","verificaToken","useCallback","logout","removeItem","SocketContext","SocketProvider","serverPath","socket","setSocket","online","setOnline","conectarSocket","socketTemp","io","connect","transports","autoConnect","forceNew","query","desconectarSocket","disconnect","useEffect","connected","on","useSocket","mensaje","id","animateScroll","scrollToBottom","containerId","duration","ChatSelect","className","Searchbox","onClick","SidebarChatItem","src","alt","Sidebar","filter","user","map","InboxPeople","horaMes","fecha","moment","format","IncomingMessage","createdAt","OutgoingMessage","SendMessage","setMensaje","onSubmit","ev","preventDefault","length","emit","placeholder","onChange","target","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","Swal","fire","checked","readOnly","to","disabled","RegisterPage","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","window","location","href","locale","ChatApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.549cb17c.chunk.js","sourcesContent":["export const types = {\n  usuariosCargados: \"[Chat] Usuarios cargados\",\n  activarChat: \"[Chat] Activar Chat\",\n  nuevoMensaje: \"[Chat] Nuevo Mensaje\",\n  cargarMensajes: \"[Chat] Cargar Mensajes\",\n  cerrarSesion: \"[Chat] Cerrar Sesion\",\n};\n","import { types } from \"../../types/types\";\n\nconst initialState = {\n  uid: \"\",\n  chatActivo: null, // UID del usuario al que yo quiero enviar mensajes\n  usuarios: [], // Todos los usuarios de la base datos\n  mensajes: [], // El chat seleccionado\n};\n\nexport const chatReducer = (state, action) => {\n  switch (action.type) {\n    case types.cerrarSesion:\n      return {\n        ...initialState,\n      };\n\n    case types.usuariosCargados:\n      return {\n        ...state,\n        usuarios: [...action.payload],\n      };\n\n    case types.activarChat:\n      if (state.chatActivo === action.payload) return state;\n\n      return {\n        ...state,\n        chatActivo: action.payload,\n        mensajes: [],\n      };\n\n    case types.nuevoMensaje:\n      if (\n        state.chatActivo === action.payload.de ||\n        state.chatActivo === action.payload.para\n      ) {\n        return {\n          ...state,\n          mensajes: [...state.mensajes, action.payload],\n        };\n      } else {\n        return state;\n      }\n\n    case types.cargarMensajes:\n      return {\n        ...state,\n        mensajes: [...action.payload.reverse()],\n      };\n\n    default:\n      return state;\n  }\n};\n//AXCZX\n","import React, { createContext, useReducer } from \"react\";\nimport { chatReducer } from \"./chatReducer\";\n\nexport const ChatContext = createContext();\n\nconst initialState = {\n  uid: \"\",\n  chatActivo: null, // UID del usuario al que yo quiero enviar mensajes\n  usuarios: [], // Todos los usuarios de la base datos\n  mensajes: [], // El chat seleccionado\n};\n\nexport const ChatProvider = ({ children }) => {\n  const [chatState, dispatch] = useReducer(chatReducer, initialState);\n  console.log(\"ChatProvider\")\n  return (\n    <ChatContext.Provider\n      value={{\n        chatState,\n        dispatch,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n","const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchSinToken = async (endpoint, data, method = \"GET\") => {\n  try {\n    const url = `${baseUrl}/${endpoint}`;\n    console.log(url);\n    if (method === \"GET\") {\n      const resp = await fetch(url);\n      return await resp.json();\n    } else {\n      const resp = await fetch(url, {\n        method,\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n\n      return await resp.json();\n    }\n  } catch (err) {\n    console.log({ err: err.name, message: err.message });\n    return { err: err.name, message: err.message };\n  }\n};\n\nexport const fetchConToken = async (endpoint, data, method = \"GET\") => {\n  try {\n    const url = `${baseUrl}/${endpoint}`;\n    const token = localStorage.getItem(\"token\") || \"\";\n\n    if (method === \"GET\") {\n      const resp = await fetch(url, {\n        headers: {\n          \"x-token\": token,\n        },\n      });\n      return await resp.json();\n    } else {\n      const resp = await fetch(url, {\n        method,\n        headers: {\n          \"Content-type\": \"application/json\",\n          \"x-token\": token,\n        },\n        body: JSON.stringify(data),\n      });\n\n      return await resp.json();\n    }\n  } catch (err) {\n    console.log({ err: err.name, message: err.message });\n    return { err: err.name, message: err.message };\n  }\n};\n","import React, { createContext, useCallback, useContext, useState } from \"react\";\nimport { ChatContext } from \"../context/chat/ChatContext\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n  uid: null,\n  checking: true,\n  logged: false,\n  name: null,\n  email: null,\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [auth, setAuth] = useState(initialState);\n\n  const { dispatch } = useContext(ChatContext);\n\n  console.log(\"_________________________________\");\n  console.log(\"AuthContextProvider\", auth);\n\n  const login = async (email, password) => {\n    const resp = await fetchSinToken(\"login\", { email, password }, \"POST\");\n\n    if (resp.ok) {\n      localStorage.setItem(\"token\", resp.token);\n      const { usuario } = resp;\n\n      setAuth({\n        uid: usuario.uid,\n        checking: false,\n        logged: true,\n        name: usuario.nombre,\n        email: usuario.email,\n      });\n    }\n\n    return resp.ok;\n  };\n\n  const register = async (nombre, email, password) => {\n    const resp = await fetchSinToken(\n      \"login/new\",\n      { nombre, email, password },\n      \"POST\"\n    );\n\n    if (resp.ok) {\n      localStorage.setItem(\"token\", resp.token);\n      const { usuario } = resp;\n\n      setAuth({\n        uid: usuario.uid,\n        checking: false,\n        logged: true,\n        name: usuario.nombre,\n        email: usuario.email,\n      });\n\n      return true;\n    }\n\n    return resp.msg;\n  };\n\n  const verificaToken = useCallback(async () => {\n    const token = localStorage.getItem(\"token\");\n    // Si token no existe\n    if (!token) {\n      setAuth({\n        uid: null,\n        checking: false,\n        logged: false,\n        name: null,\n        email: null,\n      });\n\n      return false;\n    }\n\n    const resp = await fetchConToken(\"login/renew\");\n    if (resp.ok) {\n      localStorage.setItem(\"token\", resp.token);\n      const { usuario } = resp;\n\n      setAuth({\n        uid: usuario.uid,\n        checking: false,\n        logged: true,\n        name: usuario.nombre,\n        email: usuario.email,\n      });\n\n      console.log(\"verificarTokenExistenteResp.ok\");\n\n      return true;\n    } else {\n      setAuth({\n        uid: null,\n        checking: false,\n        logged: false,\n        name: null,\n        email: null,\n      });\n\n      return false;\n    }\n  }, []);\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    dispatch({\n      type: types.cerrarSesion,\n    });\n    setAuth({\n      checking: false,\n      logged: false,\n    });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        auth,\n        login,\n        register,\n        verificaToken,\n        logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { createContext } from \"react\";\n\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { ChatContext } from \"./chat/ChatContext\";\nimport { useSocket } from \"../hooks/useSocket\";\n\nimport { types } from \"../types/types\";\nimport { scrollToBottomAnimated } from \"../helpers/scrollToBottom\";\n\nexport const SocketContext = createContext();\n\nexport const SocketProvider = ({ children }) => {\n  const { socket, online, conectarSocket, desconectarSocket } = useSocket(\n    process.env.REACT_APP_API_URL_BASE\n  );\n\n  console.log(\"SOCKET\", process.env.REACT_APP_API_URL_BASE);\n\n  console.log(\"SOCKET\", socket);\n\n  const { auth } = useContext(AuthContext);\n\n  const { dispatch } = useContext(ChatContext);\n\n  useEffect(() => {\n    if (auth.logged) {\n      conectarSocket();\n    }\n  }, [auth, conectarSocket]);\n\n  useEffect(() => {\n    if (!auth.logged) {\n      desconectarSocket();\n    }\n  }, [auth, desconectarSocket]);\n\n  // Escuchar los cambios en los usuarios conectados (cuando se conecta otro socket)\n  useEffect(() => {\n    socket?.on(\"lista-usuarios\", (usuarios) => {\n      console.log(\"callback users\", usuarios);\n      dispatch({\n        type: types.usuariosCargados,\n        payload: usuarios,\n      });\n    });\n  }, [socket, dispatch]);\n\n  // Escuchar mensajes enviados privados a mi, por mi uidd\n  useEffect(() => {\n    socket?.on(\"mensaje-personal\", (mensaje) => {\n      dispatch({\n        type: types.nuevoMensaje,\n        payload: mensaje,\n      });\n\n      scrollToBottomAnimated(\"mensajes\");\n    });\n  }, [socket, dispatch]);\n\n  return (\n    <SocketContext.Provider value={{ socket, online }}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n","import { useCallback, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\n\nexport const useSocket = (serverPath) => {\n  const [socket, setSocket] = useState(null);\n  const [online, setOnline] = useState(false);\n\n  const conectarSocket = useCallback(() => {\n    const token = localStorage.getItem(\"token\");\n    const socketTemp = io.connect(serverPath, {\n      transports: [\"websocket\"],\n      autoConnect: true,\n      forceNew: true,\n      query: {\n        \"x-token\": token,\n      },\n    });\n    setSocket(socketTemp);\n\n  }, [serverPath]);\n\n  const desconectarSocket = useCallback(() => {\n    socket?.disconnect();\n  }, [socket]);\n\n  useEffect(() => {\n    setOnline(socket?.connected);\n  }, [socket]);\n\n  useEffect(() => {\n    socket?.on(\"connect\", () => {\n      setOnline(true);\n    });\n  }, [socket]);\n  //ASDASDSAD\n  useEffect(() => {\n    socket?.on(\"disconnect\", () => {\n      setOnline(false);\n    });\n  }, [socket]);\n\n  return {\n    socket,\n    online,\n    conectarSocket,\n    desconectarSocket,\n  };\n};\n","import { animateScroll } from \"react-scroll\";\n\nexport const scrollToBottom = (id) => {\n  animateScroll.scrollToBottom({\n    containerId: id,\n    duration: 0, // Al cambiar de chat\n  });\n};\n\nexport const scrollToBottomAnimated = (id) => {\n  animateScroll.scrollToBottom({\n    containerId: id,\n    duration: 250, // Al estar en el mismo chat\n  });\n};\n","import React from \"react\";\n\nexport const ChatSelect = () => {\n  return (\n    <div className=\"middle-screen\">\n      <div className=\"alert-info\">\n        <hr />\n        <h3>Seleccione una persona</h3>\n        <span>Para comenzar una conversación</span>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../auth/AuthContext\";\n\nexport const Searchbox = () => {\n  const { auth, logout } = useContext(AuthContext);\n\n  return (\n    <div className=\"headind_srch\">\n      <div className=\"recent_heading mt-2\">\n        <h4>{auth.name}</h4>\n      </div>\n      <div className=\"srch_bar\">\n        <div className=\"stylish-input-group\">\n          <button className=\"btn text-danger\" onClick={logout}>\n            Salir\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { ChatContext } from \"../context/chat/ChatContext\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { scrollToBottom } from \"../helpers/scrollToBottom\";\n\nimport { types } from \"../types/types\";\n\nexport const SidebarChatItem = ({ usuario }) => {\n  const { chatState, dispatch } = useContext(ChatContext);\n  const { chatActivo } = chatState;\n\n  const onClick = async () => {\n    // Cargar uid usuario seleccionado\n    dispatch({\n      type: types.activarChat,\n      payload: usuario.uid,\n    });\n\n    // Cargar los mensajes del chat\n    const resp = await fetchConToken(`mensajes/${usuario.uid}`);\n    dispatch({\n      type: types.cargarMensajes,\n      payload: resp.mensajes,\n    });\n\n    scrollToBottom(\"mensajes\");\n  };\n\n  return (\n    <div\n      className={`chat_list ${usuario.uid === chatActivo && \"active_chat\"}`}\n      onClick={onClick}\n    >\n      {/* active_chat */}\n      <div className=\"chat_people\">\n        <div className=\"chat_img\">\n          <img\n            src=\"https://p.kindpng.com/picc/s/78-786207_user-avatar-png-user-avatar-icon-png-transparent.png\"\n            alt=\"sunil\"\n          />\n        </div>\n        <div className=\"chat_ib\">\n          <h5> {usuario.nombre} </h5>\n          {usuario.online ? (\n            <span className=\"text-success\">Online</span>\n          ) : (\n            <span className=\"text-danger\">Offline</span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { ChatContext } from \"../context/chat/ChatContext\";\n\nimport { SidebarChatItem } from \"./SidebarChatItem\";\n\nexport const Sidebar = () => {\n  const { chatState } = useContext(ChatContext);\n  const { auth } = useContext(AuthContext);\n\n  const { uid } = auth;\n\n  return (\n    <div className=\"inbox_chat\">\n      {chatState.usuarios\n        .filter((user) => user.uid !== uid)\n        .map((usuario) => (\n          <SidebarChatItem key={usuario.uid} usuario={usuario} />\n        ))}\n\n      {/* <!-- Espacio extra para scroll --> */}\n      <div className=\"extra_space\"></div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Searchbox } from \"./Searchbox\";\nimport { Sidebar } from \"./Sidebar\";\n\nexport const InboxPeople = () => {\n  return (\n    <div className=\"inbox_people\">\n      <Searchbox />\n\n      <Sidebar />\n    </div>\n  );\n};\n","import moment from \"moment\";\n\nexport const horaMes = (fecha) => {\n  const hoyMes = moment(fecha);\n\n  return hoyMes.format(\"HH:mm a | MMMM Do\");\n};\n","import React from \"react\";\nimport { horaMes } from \"../helpers/horaMes\";\n\nexport const IncomingMessage = ({ msg }) => {\n  return (\n    <div className=\"incoming_msg\">\n      <div className=\"incoming_msg_img\">\n        <img\n          src=\"https://ptetutorials.com/images/user-profile.png\"\n          alt=\"sunil\"\n        />\n      </div>\n      <div className=\"received_msg\">\n        <div className=\"received_withd_msg\">\n          <p>{msg.mensaje}</p>\n          <span className=\"time_date\"> {horaMes(msg.createdAt)}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { horaMes } from \"../helpers/horaMes\";\n\nexport const OutgoingMessage = ({ msg }) => {\n  return (\n    <div className=\"outgoing_msg\">\n      <div className=\"sent_msg\">\n        <p>{msg.mensaje}</p>\n        <span className=\"time_date\"> {horaMes(msg.createdAt)} </span>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useState } from \"react\";\n\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { ChatContext } from \"../context/chat/ChatContext\";\nimport { SocketContext } from \"../context/SocketContext\";\n\nexport const SendMessage = () => {\n  const [mensaje, setMensaje] = useState(\"\");\n\n  const { socket } = useContext(SocketContext);\n  const { auth } = useContext(AuthContext);\n  const { chatState } = useContext(ChatContext);\n\n  const onChange = ({ target }) => {\n    setMensaje(target.value);\n  };\n\n  const onSubmit = (ev) => {\n    ev.preventDefault();\n\n    if (mensaje.length === 0) {\n      return;\n    }\n    setMensaje(\"\");\n\n    // TODO: Emitir un evento de sockets para enviar el mensaje\n    // {\n    //     de: // UID del usuario enviando el mensaje\n    //     para: // UID del usuario que recibe el mensaje\n    //     mensaje: // lo que quiero enviar\n    // }\n    socket.emit(\"mensaje-personal\", {\n      de: auth.uid,\n      para: chatState.chatActivo,\n      mensaje,\n    });\n\n    // TODO: hacer el dispatch de el mensaje...\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"type_msg row\">\n        <div className=\"input_msg_write col-sm-9\">\n          <input\n            type=\"text\"\n            className=\"write_msg\"\n            placeholder=\"Mensaje...\"\n            value={mensaje}\n            onChange={onChange}\n          />\n        </div>\n        <div className=\"col-sm-3 text-center\">\n          <button className=\"msg_send_btn mt-3\" type=\"submit\">\n            enviar\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { ChatContext } from \"../context/chat/ChatContext\";\n\nimport { IncomingMessage } from \"./IncomingMessage\";\nimport { OutgoingMessage } from \"./OutgoingMessage\";\nimport { SendMessage } from \"./SendMessage\";\n\nexport const Messages = () => {\n  const { chatState } = useContext(ChatContext);\n  const { auth } = useContext(AuthContext);\n\n  return (\n    <div className=\"mesgs\">\n      {/* <!-- Historia inicio --> */}\n      <div id=\"mensajes\" className=\"msg_history\">\n        {chatState.mensajes.map((msg) =>\n          msg.para === auth.uid ? (\n            <IncomingMessage key={msg._id} msg={msg} />\n          ) : (\n            <OutgoingMessage key={msg._id} msg={msg} />\n          )\n        )}\n      </div>\n      {/* <!-- Historia Fin --> */}\n\n      <SendMessage />\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { ChatSelect } from \"../components/ChatSelect\";\nimport { InboxPeople } from \"../components/InboxPeople\";\nimport { Messages } from \"../components/Messages\";\nimport { ChatContext } from \"../context/chat/ChatContext\";\n\nimport \"../css/chat.css\";\n\nexport const ChatPage = () => {\n  const { chatState } = useContext(ChatContext);\n\n  return (\n    <div className=\"messaging\">\n      <div className=\"inbox_msg\">\n        <InboxPeople />\n\n        {chatState.chatActivo ? <Messages /> : <ChatSelect />}\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport Swal from \"sweetalert2\";\n\nimport { AuthContext } from \"../auth/AuthContext\";\n\nexport const LoginPage = () => {\n  const { login } = useContext(AuthContext);\n\n  const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n    rememberme: false,\n  });\n\n  useEffect(() => {\n    const email = localStorage.getItem(\"email\");\n    if (email) {\n      setForm((form) => ({\n        ...form,\n        email,\n        rememberme: true,\n      }));\n    }\n  }, []);\n\n  const onChange = ({ target }) => {\n    const { name, value } = target;\n    setForm({\n      ...form,\n      [name]: value,\n    });\n  };\n\n  const toggleCheck = () => {\n    console.log(\"??\");\n    setForm({\n      ...form,\n      rememberme: !form.rememberme,\n    });\n  };\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n\n    form.rememberme\n      ? localStorage.setItem(\"email\", form.email)\n      : localStorage.removeItem(\"email\");\n\n    const { email, password } = form;\n    const ok = await login(email, password);\n\n    if (!ok) {\n      Swal.fire(\"Error\", \"Verifique el usuario y contraseña\", \"error\");\n    }\n  };\n\n  const todoOk = () => {\n    return form.email.length > 0 && form.password.length > 0 ? true : false;\n  };\n\n  return (\n    <form\n      className=\"login100-form validate-form flex-sb flex-w\"\n      onSubmit={onSubmit}\n    >\n      <span className=\"login100-form-title mb-3\">Chat - Ingreso</span>\n\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={form.email}\n          onChange={onChange}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={form.password}\n          onChange={onChange}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n\n      <div className=\"row mb-3\">\n        <div className=\"col\" onClick={() => toggleCheck()}>\n          <input\n            className=\"input-checkbox100\"\n            id=\"ckb1\"\n            type=\"checkbox\"\n            name=\"rememberme\"\n            checked={form.rememberme}\n            readOnly\n          />\n          <label className=\"label-checkbox100\">Recordarme</label>\n        </div>\n\n        <div className=\"col text-right\">\n          <Link to=\"/auth/register\" className=\"txt1\">\n            Nueva cuenta?\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"container-login100-form-btn m-t-17\">\n        <button\n          type=\"submit\"\n          className=\"login100-form-btn\"\n          disabled={!todoOk()}\n        >\n          Ingresar\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Swal from \"sweetalert2\";\n\nimport { AuthContext } from \"../auth/AuthContext\";\n\nexport const RegisterPage = () => {\n  const { register } = useContext(AuthContext);\n\n  const [form, setForm] = useState({\n    email: \"test6@test.com\",\n    password: \"123456\",\n    name: \"Susana Paz\",\n  });\n\n  const onChange = ({ target }) => {\n    const { name, value } = target;\n    setForm({\n      ...form,\n      [name]: value,\n    });\n  };\n\n  const onSubmit = async (ev) => {\n    ev.preventDefault();\n\n    const { email, password, name } = form;\n    const msg = await register(name, email, password);\n\n    if (msg !== true) {\n      Swal.fire(\"Error\", msg, \"error\");\n    }\n  };\n\n  const todoOk = () => {\n    return form.email.length > 0 &&\n      form.password.length > 0 &&\n      form.name.length > 0\n      ? true\n      : false;\n  };\n\n  return (\n    <form\n      className=\"login100-form validate-form flex-sb flex-w\"\n      onSubmit={onSubmit}\n    >\n      <span className=\"login100-form-title mb-3\">Chat - Registro</span>\n\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Nombre\"\n          value={form.name}\n          onChange={onChange}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Email\"\n          value={form.email}\n          onChange={onChange}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n\n      <div className=\"wrap-input100 validate-input mb-3\">\n        <input\n          className=\"input100\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          value={form.password}\n          onChange={onChange}\n        />\n        <span className=\"focus-input100\"></span>\n      </div>\n\n      <div className=\"row mb-3\">\n        <div className=\"col text-right\">\n          <Link to=\"/auth/login\" className=\"txt1\">\n            Ya tienes cuenta?\n          </Link>\n        </div>\n      </div>\n\n      <div className=\"container-login100-form-btn m-t-17\">\n        <button\n          type=\"submit\"\n          className=\"login100-form-btn\"\n          disabled={!todoOk()}\n        >\n          Crear cuenta\n        </button>\n      </div>\n    </form>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { LoginPage } from \"../pages/LoginPage\";\nimport { RegisterPage } from \"../pages/RegisterPage\";\n\nimport \"../css/login-register.css\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-t-50 p-b-90\">\n          <Switch>\n            <Route exact path=\"/auth/login\" component={LoginPage} />\n            <Route exact path=\"/auth/register\" component={RegisterPage} />\n\n            <Redirect to=\"/auth/login\" />\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PublicRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  console.log(\"PublicRoute\");\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nexport const PrivateRoute = ({\n  isAuthenticated,\n  component: Component,\n  ...rest\n}) => {\n  console.log(\"PrivateRoute\");\n  return (\n    <Route\n      {...rest}\n      component={(props) =>\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/auth\" />\n      }\n    />\n  );\n};\n","import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"../auth/AuthContext\";\n\nimport { ChatPage } from \"../pages/ChatPage\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { PublicRoute } from \"./PublicRoute\";\nimport { PrivateRoute } from \"./PrivateRoute\";\n\nexport const AppRouter = () => {\n  const { auth, verificaToken } = useContext(AuthContext);\n  console.log(\"AppRouter\", window.location.href);\n  useEffect(() => {\n    verificaToken();\n  }, [verificaToken]);\n\n  if (auth.checking) {\n    return <h1>Espere por favor</h1>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          {/* <Route path=\"/auth\" component={ AuthRouter } /> */}\n          <PublicRoute\n            isAuthenticated={auth.logged}\n            path=\"/auth\"\n            component={AuthRouter}\n          />\n          <PrivateRoute\n            isAuthenticated={auth.logged}\n            exact\n            path=\"/\"\n            component={ChatPage}\n          />\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport { AuthProvider } from \"./auth/AuthContext\";\nimport { ChatProvider } from \"./context/chat/ChatContext\";\nimport { SocketProvider } from \"./context/SocketContext\";\nimport { AppRouter } from \"./router/AppRouter\";\n\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nmoment.locale(\"es\");\n\nexport const ChatApp = () => {\n  return (\n    <ChatProvider>\n      <AuthProvider>\n        <SocketProvider>\n          <AppRouter />\n        </SocketProvider>\n      </AuthProvider>\n    </ChatProvider>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ChatApp } from \"./ChatApp\";\nimport \"./index.css\";\n\nReactDOM.render(<ChatApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}